gener least squar fit by orthogon polynomi algorithm 296 e2 cacm februari 1967 makinson g j ca670203b jb march 23 1978 4 13 pm 1640 5 1640 1640 5 1640 1640 5 1640 a us of fast and slow memori in list process languag a scheme is describ which permit a substanti increas in memori space util to store list structur data it consist in reduc to on level a nonhomogen store compos of fast core and slow disk or drum memori the space avail in slow memori is divid into page each contain a given number of machin word the reduct to a on level memori is perform by a program which leav the most often call page in the fast memori when a new page from slow store is request the page in core have the longest period of inact is transfer back to the slow store the complet scheme ha been implement in connect with a lisp embed into algol us an ibm 7044 with 32k of core memori and disk gain in memori space were about 100 fold as often happen in program applic the price of the addit space is comput time although the disk have an access time 10 4 time slower than core test indic that the actual slow down vari from 3 to 10 depend on the number of page avail in the fast store cacm februari 1967 cohen j ca670202 jb februari 28 1978 4 06 pm 1626 5 1641 1641 5 1641 1641 5 1641 1641 5 1641 1708 5 1641 1781 5 1641 1860 5 1641 2299 5 1641 123 6 1641 196 6 1641 919 6 1641 990 6 1641 1007 6 1641 1046 6 1641 1131 6 1641 1139 6 1641 1140 6 1641 1149 6 1641 1198 6 1641 1215 6 1641 1223 6 1641 1265 6 1641 1303 6 1641 1323 6 1641 1358 6 1641 1366 6 1641 1366 6 1641 1389 6 1641 1421 6 1641 1421 6 1641 1460 6 1641 1462 6 1641 1463 6 1641 1467 6 1641 1468 6 1641 1477 6 1641 1491 6 1641 1496 6 1641 1496 6 1641 1502 6 1641 1531 6 1641 1535 6 1641 1565 6 1641 1601 6 1641 1602 6 1641 1613 6 1641 1614 6 1641 1626 6 1641 1626 6 1641 1626 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1641 6 1641 1785 6 1641 1786 6 1641 1787 6 1641 1788 6 1641 205 6 1641 224 6 1641 249 6 1641 288 6 1641 316 6 1641 378 6 1641 381 6 1641 398 6 1641 11 6 1641 404 6 1641 410 6 1641 463 6 1641 464 6 1641 483 6 1641 3184 6 1641 3184 6 1641 3188 6 1641 584 6 1641 600 6 1641 680 6 1641 691 6 1641 763 6 1641 799 6 1641 time share on a comput with a small memori techniqu to make time share attract on a comput with a small central memori ar present small is taken to mean that onli on user program plu a monitor will fit into the memori at ani time the techniqu depend on have two level of secondari storag level 1 sever time larger than the main memori and quit fast and level 2 mani time larger and slower than level 1 cacm februari 1967 fisher r o shepard c d ca670201 jb februari 28 1978 4 10 pm 1642 5 1642 1642 5 1642 1642 5 1642 an improv to iter method of polynomi factor method of polynomi factor which find the zero on at a time requir the divis of the polynomi by the accept factor it is shown how the accuraci of thi divis mai be increas by divid in order of both ascend and descend power of the variabl and choos a crossov point which minim a veri simpli calcul error criterion cacm januari 1967 bingham j a c ca670112 jb februari 28 1978 4 20 pm 1643 5 1643 1643 5 1643 1643 5 1643 on the comput of least squar polynomi round error accumul dure digit comput of a least squar polynomi make the comput polynomi onli an approxim to the true least squar polynomi a simpl method for adjust ing the constant term of the comput polynomi to get a better approxim to the true least squar polynomi is describ cacm januari 1967 goldberg m ca670111 jb februari 28 1978 4 24 pm 1644 5 1644 1644 5 1644 1644 5 1644 a note on comput approxim to the exponenti function two method ar discuss which result in near minimax ration approxim to the exponenti function and at the same time retain the desir properti that the approxim for neg valu of the argument is the reciproc of the approxim for correspond posit valu these method lead to approxim which ar much superior to the commonli us converg of the gaussian continu fraction for the exponenti coeffici and error ar given for the interv 5 ln 2 5 ln 2 and ln 2 ln 2 cacm januari 1967 codi w j ralston a ca670110jb februari 28 1978 4 25 pm 1015 4 1645 1346 4 1645 1440 4 1645 1645 4 1645 951 4 1645 1645 5 1645 1645 5 1645 1645 5 1645 532 5 1645 ditran a compil emphas diagnost ditran diagnost fortran is an implement of asa basic fortran with rather extens error check capabl both at compil time and dure execut of a program the need for improv diagnost capabl and some object to be met by ani compil ar discuss attent is given to the design and implement of ditran and the particular techniqu emploi to provid the diagnost featur the handl of error messag by a gener macro approach is describ special featur which provid teach aid for us by instructor ar note cacm januari 1967 moulton p g muller m e ca670109 jb februari 28 1978 4 30 pm 1179 4 1646 1225 4 1646 1288 4 1646 1350 4 1646 1544 4 1646 1613 4 1646 1646 4 1646 1646 4 1646 1646 4 1646 1646 4 1646 1646 4 1646 1646 4 1646 1647 4 1646 1728 4 1646 1781 4 1646 1900 4 1646 1945 4 1646 1955 4 1646 2025 4 1646 2111 4 1646 2154 4 1646 2365 4 1646 2506 4 1646 2534 4 1646 2556 4 1646 2650 4 1646 2650 4 1646 2698 4 1646 2708 4 1646 3060 4 1646 3093 4 1646 987 5 1646 1072 5 1646 1179 5 1646 1646 5 1646 1646 5 1646 1646 5 1646 1647 5 1646 2887 5 1646 680 5 1646 830 5 1646 1646 6 1646 2111 6 1646 watfor the univers of waterloo fortran iv compil watfor is an in core load and go compil which ha been implement within the ibm 7040 44 oper system fortran iv wa select as the sourc languag in order to achiev maximum languag compat with other avail compil system in particular the ibm 7040 44 fortran iv system the princip advantag of the watfor compil is that it translat fortran iv program at speed of up to 100 statement per second sinc the compil resid core there is virtual no system overhead and henc larg batch of student program mai be process veri effici the compil also provid extens error diagnost dure both the compil and the execut phase of a program run thi featur make the system attract to both learner and learn user alik cacm januari 1967 shantz p w german r a mitchel j g ca670108 jb februari 28 1978 4 36 pm 267 4 1647 1139 4 1647 1141 4 1647 1215 4 1647 1223 4 1647 1646 4 1647 1647 4 1647 1647 4 1647 1781 4 1647 1787 4 1647 1792 4 1647 364 4 1647 405 4 1647 438 4 1647 763 4 1647 1179 5 1647 224 5 1647 1646 5 1647 1647 5 1647 1647 5 1647 1647 5 1647 1728 5 1647 830 6 1647 987 6 1647 1072 6 1647 1179 6 1647 1525 6 1647 1647 6 1647 1647 6 1647 1785 6 1647 680 6 1647 uniform random algorithm 294 g5 cacm januari 1967 strome w m ca670107 jb februari 28 1978 4 37 pm 1648 5 1648 1648 5 1648 1648 5 1648 1663 5 1648 2349 5 1648 1190 6 1648 1648 6 1648 1648 6 1648 1716 6 1648 1794 6 1648 1894 6 1648 2043 6 1648 501 6 1648 613 6 1648 774 6 1648 data direct input output in fortran a statement which is similar to the namelist statement of fortran iv ha been incorpor in the fortran 63 compil the fortran 63 implement allow a greater flexibl and simplic than the fortran iv featur the hollerith name the locat the mode and the dimens of a variabl can be discov by mean of standard fortran statement method of us thi inform ar illustr in relat to gener purpos data direct input and output routin some other us such as matrix manipul ar discuss cacm januari 1967 hassitt a ca670106 jb februari 28 1978 4 41 pm 1649 4 1649 1053 5 1649 1649 5 1649 1649 5 1649 1649 5 1649 