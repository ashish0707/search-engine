general business-oriented language based decision expressions structure digital compute programming language covers wide class business processing applications presented structure based identifying incorporating compiler aspects common processes class permits writing extremely compact programs comparatively complex applications terms tables control expressions express information characteristic application furthermorelocal process affecting output involved effected local modifications program modification entry tables structure inexpensive preparation loading-speed compilers translate source programs efficient machine codes approach adopted departs conventional mechanical language design philosophies stresses structural analysis class processes represented languages opposed emphasizing formal contents-independent syntactical definitions relies exclusively nonprocedural representation process sets tables relations data results control statements procedure descriptions one-to-one translations flowcharts invariant pattern procedure identified characteristic class batch processes philosophy potential overcome well-known deficiencies business-oriented languages fully meets requirements set codasyl languages including machine-independence cacm february 1964 lombardi ca640208 jb march 10 1978 408 