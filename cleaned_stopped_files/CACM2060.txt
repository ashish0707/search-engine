gedanken-a simple typeless language based principle completeness reference concept gedanken experimental programming language characteristics 1 permitted context language permissible meaningful context functions labels permissible results functions values variables 2 assignment indirect addressing formalized introducing values called reference turn possess values assignment operation affects relation reference 3 compound data structures treated functions 4 type declarations permitted functional approach data structures references insure process accepts data structure accept logically equivalent structure regardless internal representation generally data structure implicit giving arbitrary algorithm computing accessing components existence label variables permits construction coroutines quasi-parallel processes unorthodox control mechanisms variety programming examples illustrates generality language limitations extensions discussed briefly cacm 1970 reynolds programming language data structure reference assignment coroutine quasi-parallel process typeless language applicative language lambda calculus list processing nondeterministic algorithm 4.20 4.22 5.23 5.24 ca700506 jb february 13 1978 143 pm 