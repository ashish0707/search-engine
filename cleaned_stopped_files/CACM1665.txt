automatic generation efficient lexical processors finite state techniques practical application theory finite-state automata generate lexical processors dealt tutorial article aed rword system developed part aed-1 system system accepts input description multicharacter items words allowable language terms subset regular expressions output system lexical processor reads string characters combines items defined regular expressions output item identified code number pointer block storage characters character count item processors produced system based finite-state machines state machine corresponds unique condition lexical processing character string state character read machine state transition actions based character read system operation 1966 processors generated compared favorably speed carefully hand-coded programs accomplish task lexical processors aed-o mad produced techniques employed independent nature items evaluated word events substituted character string processors generalized decision-making mechanisms based ordered sequence events system range applications area lexical processing convenient advantages speed important consideration designing system automatic generation lexical processor goal processor completely eliminated backup rereading nearly fast hand-coded processors analyze language detect errors convenient easy cacm december 1968 johnson porter ackley ross character string compiler finite-state automata finite-state machine lexical processor nondeterministic machine parsing plex structure regular expressionssequential machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pm 